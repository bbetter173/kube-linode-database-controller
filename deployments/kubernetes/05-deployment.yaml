apiVersion: apps/v1
kind: Deployment
metadata:
  name: linode-db-allowlist
  namespace: linode-db-allowlist
  labels:
    app.kubernetes.io/name: linode-db-allowlist
    app.kubernetes.io/part-of: linode-db-allowlist
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: linode-db-allowlist
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: linode-db-allowlist
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: linode-db-allowlist
      containers:
      - name: nodewatcher
        image: ghcr.io/bbetter173/kube-linode-database-controller:latest  # Replace with your actual image
        imagePullPolicy: Always
        args:
        - "--config=/etc/linode-db-allowlist/config.yaml"
        - "--metrics-addr=:8080"
        env:
        - name: LINODE_TOKEN
          valueFrom:
            secretKeyRef:
              name: linode-db-allowlist-secret
              key: LINODE_TOKEN
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/linode-db-allowlist
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: linode-db-allowlist-config 